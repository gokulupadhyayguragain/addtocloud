name: Deploy Backend to Google Cloud

on:
  push:
    branches: [main]
    paths: ['apps/backend/**']
  workflow_dispatch:

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  GAR_LOCATION: us-central1
  SERVICE: addtocloud-api
  REGION: us-central1

jobs:
  deploy-gcp:
    name: Deploy to Google Cloud Run
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./apps/backend

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Google Auth
      id: auth
      uses: google-github-actions/auth@v2
      with:
        credentials_json: '${{ secrets.GCP_SA_KEY }}'

    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v2

    - name: Configure Docker to use gcloud as a credential helper
      run: |
        gcloud auth configure-docker $GAR_LOCATION-docker.pkg.dev

    - name: Create Artifact Registry repository
      run: |
        gcloud artifacts repositories create addtocloud-repo \
          --repository-format=docker \
          --location=$GAR_LOCATION \
          --description="AddToCloud Docker repository" || echo "Repository already exists"

    - name: Build and push Docker image
      run: |
        # Build image
        docker build -f Dockerfile.production -t $GAR_LOCATION-docker.pkg.dev/$PROJECT_ID/addtocloud-repo/$SERVICE:${{ github.sha }} .
        docker build -f Dockerfile.production -t $GAR_LOCATION-docker.pkg.dev/$PROJECT_ID/addtocloud-repo/$SERVICE:latest .
        
        # Push image
        docker push $GAR_LOCATION-docker.pkg.dev/$PROJECT_ID/addtocloud-repo/$SERVICE:${{ github.sha }}
        docker push $GAR_LOCATION-docker.pkg.dev/$PROJECT_ID/addtocloud-repo/$SERVICE:latest

    - name: Deploy to Cloud Run
      id: deploy
      uses: google-github-actions/deploy-cloudrun@v2
      with:
        service: ${{ env.SERVICE }}
        region: ${{ env.REGION }}
        image: ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/addtocloud-repo/${{ env.SERVICE }}:${{ github.sha }}
        env_vars: |
          PORT=8080
          GIN_MODE=release

    - name: Allow unauthenticated access
      run: |
        gcloud run services add-iam-policy-binding $SERVICE \
          --region=$REGION \
          --member="allUsers" \
          --role="roles/run.invoker"

    - name: Get service URL
      run: |
        SERVICE_URL=$(gcloud run services describe $SERVICE --region=$REGION --format='value(status.url)')
        
        echo "🚀 Backend API deployed successfully to Google Cloud Run!"
        echo "📍 API Endpoint: $SERVICE_URL"
        echo "🔍 Health Check: $SERVICE_URL/health"
        echo "📋 Services API: $SERVICE_URL/api/v1/cloud/services"
        
        # Save endpoint for frontend configuration
        echo "API_ENDPOINT=$SERVICE_URL" >> $GITHUB_ENV
