# =============================================================================
# Terraform Variables for AddToCloud Multi-Cloud Deployment
# =============================================================================
# Copy this file to terraform.tfvars and update with your actual values

# Project Configuration
project_name = "addtocloud"
environment  = "production"

# Kubernetes Configuration
kubernetes_version = "1.28"
node_count        = 3

# =============================================================================
# Azure Configuration
# =============================================================================
# Get these values by running:
# az ad sp create-for-rbac --name "addtocloud-sp" --role="Contributor"

azure_subscription_id = "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
azure_tenant_id       = "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
azure_location        = "East US"
azure_node_vm_size    = "Standard_D2s_v3"

# =============================================================================
# AWS Configuration
# =============================================================================
# Create IAM user with programmatic access and appropriate permissions

aws_region               = "us-east-1"
aws_availability_zones   = ["us-east-1a", "us-east-1b", "us-east-1c"]
aws_node_instance_type   = "t3.medium"
database_instance_class  = "db.t3.micro"
database_allocated_storage = 20
enable_database_encryption = true

# =============================================================================
# GCP Configuration
# =============================================================================
# Create a new project or use existing one
# Enable required APIs: container.googleapis.com, sqladmin.googleapis.com

gcp_project_id         = "addtocloud-production-123456"
gcp_region            = "us-central1"
gcp_zone              = "us-central1-a"
gcp_node_machine_type = "e2-medium"

# =============================================================================
# Network Configuration
# =============================================================================
vpc_cidr = "10.0.0.0/16"

private_subnet_cidrs = [
  "10.0.1.0/24",
  "10.0.2.0/24",
  "10.0.3.0/24"
]

public_subnet_cidrs = [
  "10.0.101.0/24",
  "10.0.102.0/24",
  "10.0.103.0/24"
]

# =============================================================================
# Domain and SSL Configuration
# =============================================================================
domain_name        = "addtocloud.tech"
certificate_email  = "admin@addtocloud.tech"

# =============================================================================
# Service Mesh and Monitoring
# =============================================================================
istio_version     = "1.20.0"
enable_istio      = true
enable_monitoring = true
enable_logging    = true

# =============================================================================
# Common Tags/Labels
# =============================================================================
common_tags = {
  Project     = "AddToCloud"
  Environment = "production"
  ManagedBy   = "Terraform"
  Owner       = "DevOps"
  Team        = "Platform"
  CostCenter  = "Engineering"
}

# =============================================================================
# How to get required credentials:
# =============================================================================

# Azure:
# 1. Install Azure CLI: https://docs.microsoft.com/en-us/cli/azure/install-azure-cli
# 2. Login: az login
# 3. Create service principal: 
#    az ad sp create-for-rbac --name "addtocloud-sp" --role="Contributor"
# 4. Copy the output values to the azure_* variables above

# AWS:
# 1. Create IAM user with programmatic access
# 2. Attach policies: PowerUserAccess or custom policy with required permissions
# 3. Create access key and copy to AWS CLI config or use directly in Terraform
# 4. Set AWS_ACCESS_KEY_ID and AWS_SECRET_ACCESS_KEY environment variables

# GCP:
# 1. Create new project or use existing one
# 2. Enable required APIs:
#    gcloud services enable container.googleapis.com
#    gcloud services enable sqladmin.googleapis.com
#    gcloud services enable secretmanager.googleapis.com
# 3. Create service account:
#    gcloud iam service-accounts create addtocloud-terraform
# 4. Grant permissions:
#    gcloud projects add-iam-policy-binding PROJECT_ID \
#      --member="serviceAccount:addtocloud-terraform@PROJECT_ID.iam.gserviceaccount.com" \
#      --role="roles/editor"
# 5. Create and download key:
#    gcloud iam service-accounts keys create addtocloud-key.json \
#      --iam-account=addtocloud-terraform@PROJECT_ID.iam.gserviceaccount.com
# 6. Set GOOGLE_APPLICATION_CREDENTIALS environment variable

# =============================================================================
# Deployment Commands:
# =============================================================================

# Initialize Terraform:
# terraform init

# Plan deployment (preview changes):
# terraform plan

# Apply deployment:
# terraform apply

# Destroy resources (when needed):
# terraform destroy

# =============================================================================
# Environment Variables for Sensitive Data:
# =============================================================================
# Instead of putting sensitive data in this file, use environment variables:

# export TF_VAR_azure_client_id="your-client-id"
# export TF_VAR_azure_client_secret="your-client-secret"
# export AWS_ACCESS_KEY_ID="your-access-key"
# export AWS_SECRET_ACCESS_KEY="your-secret-key"
# export GOOGLE_APPLICATION_CREDENTIALS="/path/to/service-account-key.json"
