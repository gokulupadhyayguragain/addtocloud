# Multi-Cloud Prometheus Federation Configuration
# Enables centralized monitoring across AWS, Azure, and GCP clusters

# Primary Prometheus Configuration (GCP)
apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-federation-config
  namespace: monitoring
data:
  prometheus.yml: |
    global:
      scrape_interval: 15s
      evaluation_interval: 15s
      external_labels:
        cluster: 'gcp-primary'
        region: 'us-central1'
        cloud: 'gcp'

    rule_files:
      - "/etc/prometheus/rules/*.yml"

    scrape_configs:
      # Local cluster scraping
      - job_name: 'kubernetes-apiservers'
        kubernetes_sd_configs:
          - role: endpoints
        scheme: https
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        relabel_configs:
          - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
            action: keep
            regex: default;kubernetes;https

      # Istio metrics
      - job_name: 'istio-mesh'
        kubernetes_sd_configs:
          - role: endpoints
            namespaces:
              names:
                - istio-system
        relabel_configs:
          - source_labels: [__meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
            action: keep
            regex: istio-telemetry;prometheus

      # AddToCloud application metrics
      - job_name: 'addtocloud-backend'
        kubernetes_sd_configs:
          - role: endpoints
            namespaces:
              names:
                - addtocloud
        relabel_configs:
          - source_labels: [__meta_kubernetes_service_label_app]
            action: keep
            regex: addtocloud-backend

      # AWS cluster federation
      - job_name: 'aws-cluster-federation'
        static_configs:
          - targets: ['prometheus-aws.addtocloud.aws.local:9090']
        metrics_path: '/federate'
        params:
          'match[]':
            - '{job=~"kubernetes-.*"}'
            - '{job=~"addtocloud-.*"}'
            - '{job=~"istio-.*"}'
        honor_labels: true
        scrape_interval: 30s

      # Azure cluster federation
      - job_name: 'azure-cluster-federation'
        static_configs:
          - targets: ['prometheus-azure.addtocloud.azure.local:9090']
        metrics_path: '/federate'
        params:
          'match[]':
            - '{job=~"kubernetes-.*"}'
            - '{job=~"addtocloud-.*"}'
            - '{job=~"istio-.*"}'
        honor_labels: true
        scrape_interval: 30s

    # Remote write configuration for long-term storage
    remote_write:
      - url: "https://prometheus-remote-write.addtocloud.tech/api/v1/write"
        write_relabel_configs:
          - source_labels: [__name__]
            regex: 'addtocloud_.*|istio_.*|up'
            action: keep

---
# Multi-Cloud Alerting Rules
apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-rules
  namespace: monitoring
data:
  multi-cloud-alerts.yml: |
    groups:
      - name: multi-cloud-availability
        rules:
          - alert: ClusterDown
            expr: up{job="kubernetes-apiservers"} == 0
            for: 5m
            labels:
              severity: critical
              cloud: "{{ $labels.cloud }}"
            annotations:
              summary: "Kubernetes cluster is down"
              description: "Cluster {{ $labels.cluster }} in {{ $labels.cloud }} has been down for more than 5 minutes"

          - alert: CrossClusterLatencyHigh
            expr: histogram_quantile(0.95, rate(istio_request_duration_milliseconds_bucket{source_cluster!="unknown",destination_cluster!="unknown",source_cluster!=destination_cluster}[5m])) > 1000
            for: 10m
            labels:
              severity: warning
            annotations:
              summary: "High cross-cluster latency detected"
              description: "95th percentile latency between clusters is {{ $value }}ms"

          - alert: ServiceMeshConnectivityIssue
            expr: rate(istio_requests_total{response_code!~"2.*"}[5m]) > 0.1
            for: 5m
            labels:
              severity: warning
            annotations:
              summary: "Service mesh connectivity issues"
              description: "Error rate in service mesh is {{ $value }}"

          - alert: MultiCloudFailover
            expr: absent(up{job="aws-cluster-federation"}) and absent(up{job="azure-cluster-federation"})
            for: 2m
            labels:
              severity: critical
            annotations:
              summary: "Multi-cloud failover required"
              description: "Both AWS and Azure clusters are unreachable from GCP primary"

      - name: application-health
        rules:
          - alert: AddToCloudBackendDown
            expr: up{job="addtocloud-backend"} == 0
            for: 3m
            labels:
              severity: critical
            annotations:
              summary: "AddToCloud backend is down"
              description: "Backend service in {{ $labels.cloud }} cluster has been down for more than 3 minutes"

          - alert: HighErrorRate
            expr: rate(addtocloud_http_requests_total{status=~"5.*"}[5m]) / rate(addtocloud_http_requests_total[5m]) > 0.05
            for: 5m
            labels:
              severity: warning
            annotations:
              summary: "High error rate detected"
              description: "Error rate is {{ $value }} in {{ $labels.cloud }} cluster"

          - alert: DatabaseConnectionIssues
            expr: addtocloud_database_connections_failed_total > 10
            for: 2m
            labels:
              severity: warning
            annotations:
              summary: "Database connection issues"
              description: "{{ $value }} database connection failures in the last 2 minutes"

---
# Grafana Datasources for Multi-Cloud
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-datasources
  namespace: monitoring
data:
  datasources.yaml: |
    apiVersion: 1
    datasources:
      - name: Prometheus-GCP
        type: prometheus
        access: proxy
        url: http://prometheus:9090
        isDefault: true
        editable: true
        jsonData:
          exemplarTraceIdDestinations:
            - name: trace_id
              datasourceUid: jaeger

      - name: Prometheus-AWS
        type: prometheus
        access: proxy
        url: http://prometheus-aws.addtocloud.aws.local:9090
        editable: true
        jsonData:
          exemplarTraceIdDestinations:
            - name: trace_id
              datasourceUid: jaeger

      - name: Prometheus-Azure
        type: prometheus
        access: proxy
        url: http://prometheus-azure.addtocloud.azure.local:9090
        editable: true
        jsonData:
          exemplarTraceIdDestinations:
            - name: trace_id
              datasourceUid: jaeger

      - name: Jaeger
        type: jaeger
        access: proxy
        url: http://jaeger-query:16686
        uid: jaeger
