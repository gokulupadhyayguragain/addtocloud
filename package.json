{
  "name": "addtocloud-platform",
  "version": "1.0.0",
  "description": "AddToCloud Enterprise Platform - Multi-cloud deployment with Cloudflare frontend",
  "private": true,
  "workspaces": [
    "frontend"
  ],
  "scripts": {
    "dev": "concurrently \"npm run dev:frontend\" \"npm run dev:backend\"",
    "dev:frontend": "cd frontend && npm run dev",
    "dev:backend": "cd backend && go run cmd/main.go",
    "build": "npm run build:frontend && npm run build:backend",
    "build:frontend": "cd frontend && npm run build:export",
    "build:backend": "cd backend && go build -o bin/addtocloud ./cmd/main.go",
    "test": "npm run test:frontend && npm run test:backend",
    "test:frontend": "cd frontend && npm run test",
    "test:backend": "cd backend && go test ./...",
    "deploy": "npm run deploy:all",
    "deploy:all": "node scripts/deploy-wrapper.js",
    "deploy:frontend": "cd frontend && npm run deploy",
    "deploy:staging": "cross-env ENVIRONMENT=staging npm run deploy:all",
    "deploy:production": "cross-env ENVIRONMENT=production npm run deploy:all",
    "deploy:development": "cross-env ENVIRONMENT=development npm run deploy:all",
    "cloudflare:setup": "cd frontend && npm run cloudflare:setup",
    "cloudflare:deploy": "cd frontend && npm run deploy",
    "cloudflare:deploy:staging": "cd frontend && npm run deploy:staging",
    "cloudflare:deploy:production": "cd frontend && npm run deploy:production",
    "k8s:deploy": "kubectl apply -f infrastructure/kubernetes/deployments/ -n addtocloud",
    "k8s:deploy:istio": "kubectl apply -f infrastructure/istio/ -n addtocloud",
    "terraform:init": "npm run terraform:init:azure && npm run terraform:init:aws && npm run terraform:init:gcp",
    "terraform:init:azure": "cd infrastructure/terraform/azure && terraform init",
    "terraform:init:aws": "cd infrastructure/terraform/aws && terraform init",
    "terraform:init:gcp": "cd infrastructure/terraform/gcp && terraform init",
    "terraform:plan": "npm run terraform:plan:azure && npm run terraform:plan:aws && npm run terraform:plan:gcp",
    "terraform:plan:azure": "cd infrastructure/terraform/azure && terraform plan",
    "terraform:plan:aws": "cd infrastructure/terraform/aws && terraform plan",
    "terraform:plan:gcp": "cd infrastructure/terraform/gcp && terraform plan",
    "terraform:apply": "npm run terraform:apply:azure && npm run terraform:apply:aws && npm run terraform:apply:gcp",
    "terraform:apply:azure": "cd infrastructure/terraform/azure && terraform apply -auto-approve",
    "terraform:apply:aws": "cd infrastructure/terraform/aws && terraform apply -auto-approve",
    "terraform:apply:gcp": "cd infrastructure/terraform/gcp && terraform apply -auto-approve",
    "docker:build": "npm run docker:build:frontend && npm run docker:build:backend",
    "docker:build:frontend": "docker build -t addtocloud-frontend:latest -f infrastructure/docker/Dockerfile.frontend .",
    "docker:build:backend": "docker build -t addtocloud-backend:latest -f infrastructure/docker/Dockerfile.backend .",
    "docker:push": "npm run docker:push:frontend && npm run docker:push:backend",
    "docker:push:frontend": "docker push addtocloud-frontend:latest",
    "docker:push:backend": "docker push addtocloud-backend:latest",
    "setup:dev": "npm run setup:dev:windows || npm run setup:dev:unix",
    "setup:dev:windows": "powershell -ExecutionPolicy Bypass -File scripts/setup-dev.ps1",
    "setup:dev:unix": "bash scripts/setup-dev.sh",
    "health:check": "npm run health:check:frontend && npm run health:check:backend",
    "health:check:frontend": "curl -f http://localhost:3000/api/health || exit 1",
    "health:check:backend": "curl -f http://localhost:8080/health || exit 1",
    "logs": "npm run logs:frontend && npm run logs:backend",
    "logs:frontend": "kubectl logs -f deployment/addtocloud-frontend -n addtocloud",
    "logs:backend": "kubectl logs -f deployment/addtocloud-backend -n addtocloud",
    "monitoring:port-forward": "concurrently \"kubectl port-forward -n addtocloud svc/grafana 3001:3000\" \"kubectl port-forward -n addtocloud svc/prometheus 9090:9090\"",
    "clean": "npm run clean:node_modules && npm run clean:docker && npm run clean:terraform",
    "clean:node_modules": "rimraf node_modules frontend/node_modules",
    "clean:docker": "docker system prune -f",
    "clean:terraform": "find infrastructure/terraform -name '*.tfstate*' -delete && find infrastructure/terraform -name '.terraform' -type d -exec rm -rf {} +",
    "lint": "npm run lint:frontend && npm run lint:backend",
    "lint:frontend": "cd frontend && npm run lint",
    "lint:backend": "cd backend && golangci-lint run",
    "format": "npm run format:frontend && npm run format:backend",
    "format:frontend": "cd frontend && npm run format",
    "format:backend": "cd backend && go fmt ./...",
    "security:scan": "npm audit && npm run security:scan:docker",
    "security:scan:docker": "trivy image addtocloud-frontend:latest && trivy image addtocloud-backend:latest",
    "backup:create": "kubectl exec -n addtocloud deployment/postgres -- pg_dump -U addtocloud addtocloud > backup-$(date +%Y%m%d-%H%M%S).sql",
    "backup:restore": "kubectl exec -i -n addtocloud deployment/postgres -- psql -U addtocloud addtocloud",
    "generate:secrets": "node scripts/generate-secrets.js",
    "validate:env": "node scripts/validate-env.js",
    "migrate:up": "cd backend && go run migrations/migrate.go up",
    "migrate:down": "cd backend && go run migrations/migrate.go down",
    "seed:data": "cd backend && go run cmd/seed/main.go"
  },
  "devDependencies": {
    "concurrently": "^8.2.0",
    "cross-env": "^7.0.3",
    "rimraf": "^5.0.0"
  },
  "engines": {
    "node": ">=18.0.0",
    "npm": ">=9.0.0"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/gokulupadhyayguragain/addtocloud.git"
  },
  "keywords": [
    "cloud",
    "multi-cloud",
    "kubernetes",
    "cloudflare",
    "azure",
    "aws",
    "gcp",
    "enterprise",
    "platform"
  ],
  "author": "AddToCloud Team",
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/gokulupadhyayguragain/addtocloud/issues"
  },
  "homepage": "https://addtocloud.tech"
}
