apiVersion: apps/v1
kind: Deployment
metadata:
  name: addtocloud-test-api
  namespace: default
  annotations:
    sidecar.istio.io/inject: "false"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: addtocloud-test-api
  template:
    metadata:
      labels:
        app: addtocloud-test-api
      annotations:
        sidecar.istio.io/inject: "false"
    spec:
      containers:
      - name: api
        image: nginx:alpine
        command: ["/bin/sh"]
        args:
        - -c
        - |
          cat > /etc/nginx/nginx.conf << 'EOF'
          events {}
          http {
            server {
              listen 8080;
              location /contact {
                add_header Content-Type application/json;
                add_header Access-Control-Allow-Origin *;
                add_header Access-Control-Allow-Methods "POST, OPTIONS";
                add_header Access-Control-Allow-Headers "Content-Type";
                if ($request_method = OPTIONS) {
                  return 200;
                }
                return 200 '{"status":"received","message":"Your message has been received successfully","timestamp":"2025-08-30T13:00:00Z"}';
              }
              location /api/v1/contact {
                add_header Content-Type application/json;
                add_header Access-Control-Allow-Origin *;
                add_header Access-Control-Allow-Methods "POST, OPTIONS";
                add_header Access-Control-Allow-Headers "Content-Type";
                if ($request_method = OPTIONS) {
                  return 200;
                }
                return 200 '{"status":"received","message":"Your message has been received successfully","timestamp":"2025-08-30T13:00:00Z"}';
              }
              location /auth/login {
                add_header Content-Type application/json;
                add_header Access-Control-Allow-Origin *;
                add_header Access-Control-Allow-Methods "POST, OPTIONS";
                add_header Access-Control-Allow-Headers "Content-Type";
                if ($request_method = OPTIONS) {
                  return 200;
                }
                return 200 '{"status":"success","message":"Login successful","token":"demo-jwt-token-123","user":{"email":"admin@addtocloud.tech","name":"Admin User","role":"admin"},"timestamp":"2025-08-30T13:00:00Z"}';
              }
              location /api/v1/auth/login {
                add_header Content-Type application/json;
                add_header Access-Control-Allow-Origin *;
                add_header Access-Control-Allow-Methods "POST, OPTIONS";
                add_header Access-Control-Allow-Headers "Content-Type";
                if ($request_method = OPTIONS) {
                  return 200;
                }
                return 200 '{"status":"success","message":"Login successful","token":"demo-jwt-token-123","user":{"email":"admin@addtocloud.tech","name":"Admin User","role":"admin"},"timestamp":"2025-08-30T13:00:00Z"}';
              }
              location /api/health {
                add_header Content-Type application/json;
                add_header Access-Control-Allow-Origin *;
                return 200 '{"status":"healthy","message":"AddToCloud API is running","cluster":"AWS-EKS","timestamp":"2025-08-30T13:00:00Z","version":"1.0.0"}';
              }
            }
          }
          EOF
          nginx -g "daemon off;"
        ports:
        - containerPort: 8080
        resources:
          requests:
            cpu: 10m
            memory: 16Mi
          limits:
            cpu: 50m
            memory: 32Mi
---
apiVersion: v1
kind: Service
metadata:
  name: addtocloud-test-api-service
  namespace: default
spec:
  selector:
    app: addtocloud-test-api
  ports:
  - port: 80
    targetPort: 8080
    protocol: TCP
  type: LoadBalancer
