apiVersion: v1
kind: Namespace
metadata:
  name: addtocloud-production
---
apiVersion: v1
kind: Secret
metadata:
  name: database-credentials
  namespace: addtocloud-production
type: Opaque
stringData:
  DB_HOST: "postgres-service"
  DB_PORT: "5432"
  DB_USER: "addtocloud"
  DB_PASSWORD: "SecurePassword123!"
  DB_NAME: "addtocloud_prod"
  DATABASE_URL: "postgres://addtocloud:SecurePassword123!@postgres-service:5432/addtocloud_prod?sslmode=disable"
---
apiVersion: v1
kind: Secret
metadata:
  name: smtp-credentials
  namespace: addtocloud-production
type: Opaque
stringData:
  SMTP_HOST: "smtp.zoho.com"
  SMTP_PORT: "587"
  SMTP_USERNAME: "noreply@addtocloud.tech"
  SMTP_PASSWORD: "xcBP8i1URm7n"
  SMTP_FROM: "noreply@addtocloud.tech"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-init
  namespace: addtocloud-production
data:
  init.sql: |
    CREATE DATABASE addtocloud_prod;
    CREATE USER addtocloud WITH PASSWORD 'SecurePassword123!';
    GRANT ALL PRIVILEGES ON DATABASE addtocloud_prod TO addtocloud;
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  namespace: addtocloud-production
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
      - name: postgres
        image: postgres:15
        env:
        - name: POSTGRES_USER
          value: "postgres"
        - name: POSTGRES_PASSWORD
          value: "postgres"
        - name: POSTGRES_DB
          value: "addtocloud_prod"
        ports:
        - containerPort: 5432
        volumeMounts:
        - name: postgres-storage
          mountPath: /var/lib/postgresql/data
        - name: init-scripts
          mountPath: /docker-entrypoint-initdb.d
      volumes:
      - name: postgres-storage
        emptyDir: {}
      - name: init-scripts
        configMap:
          name: postgres-init
---
apiVersion: v1
kind: Service
metadata:
  name: postgres-service
  namespace: addtocloud-production
spec:
  selector:
    app: postgres
  ports:
  - port: 5432
    targetPort: 5432
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: addtocloud-backend
  namespace: addtocloud-production
  labels:
    app: addtocloud-backend
spec:
  replicas: 2
  selector:
    matchLabels:
      app: addtocloud-backend
  template:
    metadata:
      labels:
        app: addtocloud-backend
    spec:
      containers:
      - name: backend
        image: addtocloud/backend:latest
        ports:
        - containerPort: 8080
        env:
        - name: PORT
          value: "8080"
        - name: DB_HOST
          valueFrom:
            secretKeyRef:
              name: database-credentials
              key: DB_HOST
        - name: DB_PORT
          valueFrom:
            secretKeyRef:
              name: database-credentials
              key: DB_PORT
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: database-credentials
              key: DB_USER
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: database-credentials
              key: DB_PASSWORD
        - name: DB_NAME
          valueFrom:
            secretKeyRef:
              name: database-credentials
              key: DB_NAME
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: database-credentials
              key: DATABASE_URL
        - name: SMTP_HOST
          valueFrom:
            secretKeyRef:
              name: smtp-credentials
              key: SMTP_HOST
        - name: SMTP_PORT
          valueFrom:
            secretKeyRef:
              name: smtp-credentials
              key: SMTP_PORT
        - name: SMTP_USERNAME
          valueFrom:
            secretKeyRef:
              name: smtp-credentials
              key: SMTP_USERNAME
        - name: SMTP_PASSWORD
          valueFrom:
            secretKeyRef:
              name: smtp-credentials
              key: SMTP_PASSWORD
        - name: SMTP_FROM
          valueFrom:
            secretKeyRef:
              name: smtp-credentials
              key: SMTP_FROM
        livenessProbe:
          httpGet:
            path: /api/health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /api/health
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: addtocloud-backend-service
  namespace: addtocloud-production
spec:
  selector:
    app: addtocloud-backend
  ports:
  - port: 80
    targetPort: 8080
  type: LoadBalancer
---
apiVersion: networking.istio.io/v1beta1
kind: VirtualService
metadata:
  name: addtocloud-backend-vs
  namespace: addtocloud-production
spec:
  hosts:
  - "*"
  gateways:
  - addtocloud-gateway
  http:
  - match:
    - uri:
        prefix: /api
    route:
    - destination:
        host: addtocloud-backend-service
        port:
          number: 80
