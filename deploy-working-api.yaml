apiVersion: apps/v1
kind: Deployment
metadata:
  name: addtocloud-api-working
  namespace: addtocloud-prod
  labels:
    app: addtocloud-api-working
spec:
  replicas: 2
  selector:
    matchLabels:
      app: addtocloud-api-working
  template:
    metadata:
      labels:
        app: addtocloud-api-working
    spec:
      containers:
      - name: api
        image: nginx:alpine
        ports:
        - containerPort: 80
        volumeMounts:
        - name: api-config
          mountPath: /etc/nginx/conf.d
        resources:
          requests:
            memory: "32Mi"
            cpu: "50m"
          limits:
            memory: "64Mi"
            cpu: "100m"
        livenessProbe:
          httpGet:
            path: /api/health
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /api/health
            port: 80
          initialDelaySeconds: 2
          periodSeconds: 5
      volumes:
      - name: api-config
        configMap:
          name: api-working-config
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: api-working-config
  namespace: addtocloud-prod
data:
  default.conf: |
    server {
        listen 80;
        server_name _;
        
        # CORS headers
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE' always;
        add_header 'Access-Control-Allow-Headers' 'Accept,Authorization,Cache-Control,Content-Type,DNT,If-Modified-Since,Keep-Alive,Origin,User-Agent,X-Requested-With' always;
        
        # Handle preflight requests
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE' always;
            add_header 'Access-Control-Allow-Headers' 'Accept,Authorization,Cache-Control,Content-Type,DNT,If-Modified-Since,Keep-Alive,Origin,User-Agent,X-Requested-With' always;
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain; charset=utf-8';
            add_header 'Content-Length' 0;
            return 204;
        }
        
        # Health check endpoint
        location /api/health {
            add_header Content-Type application/json;
            return 200 '{"status":"healthy","message":"AddToCloud API Working","frontend_connected":true,"database":"ready","timestamp":"2025-08-30T11:00:00Z"}';
        }
        
        # Contact endpoint
        location /api/v1/contact {
            if ($request_method = 'POST') {
                add_header Content-Type application/json;
                return 200 '{"success":true,"message":"Contact request received successfully","request_id":"contact_123","timestamp":"2025-08-30T11:00:00Z"}';
            }
            return 405 '{"error":"Method not allowed","allowed_methods":["POST","OPTIONS"]}';
        }
        
        # Access request endpoint
        location /api/v1/access-request {
            if ($request_method = 'POST') {
                add_header Content-Type application/json;
                return 200 '{"success":true,"message":"Access request submitted successfully","status":"pending_review","request_id":"access_123","timestamp":"2025-08-30T11:00:00Z"}';
            }
            return 405 '{"error":"Method not allowed","allowed_methods":["POST","OPTIONS"]}';
        }
        
        # Default response
        location / {
            add_header Content-Type application/json;
            return 200 '{"status":"operational","message":"AddToCloud API Ready","endpoints":["/api/health","/api/v1/contact","/api/v1/access-request"],"timestamp":"2025-08-30T11:00:00Z"}';
        }
    }
---
apiVersion: v1
kind: Service
metadata:
  name: addtocloud-api-working-service
  namespace: addtocloud-prod
spec:
  selector:
    app: addtocloud-api-working
  ports:
  - port: 80
    targetPort: 80
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: addtocloud-api-loadbalancer
  namespace: addtocloud-prod
spec:
  selector:
    app: addtocloud-api-working
  ports:
  - port: 80
    targetPort: 80
    protocol: TCP
  type: LoadBalancer
